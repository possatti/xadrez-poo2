/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifes.poo2.xadrez.ciu.cih;

/**
 * Painel que representa o tabuleiro na tela.
 *
 * @author possatti
 */
public class JPanelTabuleiro extends javax.swing.JPanel {

    public static final int NUM_LINHAS = 8;
    public static final int NUM_COLUNAS = 8;

    private JPanelCasa[][] casas = new JPanelCasa[NUM_LINHAS][NUM_COLUNAS];

    /**
     * Creates new form JPanelTabuleiro
     */
    public JPanelTabuleiro() {
        initComponents();
        initCasas();
        posicionarPecas();
    }

    /**
     * Posiciona as peças segundo a formação inicial do jogo.
     */
    public void posicionarPecas() {
        // Cria uma matriz com o estado com que o tabuleiro deve ser iniciado.
        TipoPecaGrafica[][] tabuleiro = new TipoPecaGrafica[NUM_LINHAS][NUM_COLUNAS];

        // Posiciona peões brancos.
        for (int coluna = 0; coluna < NUM_COLUNAS; coluna++) {
            tabuleiro[1][coluna] = TipoPecaGrafica.PEAO_BRANCO;
        }

        // Posiciona peões pretos.
        for (int coluna = 0; coluna < NUM_COLUNAS; coluna++) {
            tabuleiro[6][coluna] = TipoPecaGrafica.PEAO_PRETO;
        }

        // Posiciona outras peças brancas.
        tabuleiro[0][0] = TipoPecaGrafica.TORRE_BRANCO;
        tabuleiro[0][1] = TipoPecaGrafica.CAVALO_BRANCO;
        tabuleiro[0][2] = TipoPecaGrafica.BISPO_BRANCO;
        tabuleiro[0][3] = TipoPecaGrafica.DAMA_BRANCO;
        tabuleiro[0][4] = TipoPecaGrafica.REI_BRANCO;
        tabuleiro[0][5] = TipoPecaGrafica.BISPO_BRANCO;
        tabuleiro[0][6] = TipoPecaGrafica.CAVALO_BRANCO;
        tabuleiro[0][7] = TipoPecaGrafica.TORRE_BRANCO;

        // Posiciona outras peças pretas.
        tabuleiro[7][0] = TipoPecaGrafica.TORRE_PRETO;
        tabuleiro[7][1] = TipoPecaGrafica.CAVALO_PRETO;
        tabuleiro[7][2] = TipoPecaGrafica.BISPO_PRETO;
        tabuleiro[7][3] = TipoPecaGrafica.DAMA_PRETO;
        tabuleiro[7][4] = TipoPecaGrafica.REI_PRETO;
        tabuleiro[7][5] = TipoPecaGrafica.BISPO_PRETO;
        tabuleiro[7][6] = TipoPecaGrafica.CAVALO_PRETO;
        tabuleiro[7][7] = TipoPecaGrafica.TORRE_PRETO;

        // Atualiza o tabuleiro segundo o estado criado.
        atualizarTabuleiro(tabuleiro);
    }

    /**
     * Atualiza as casas do tabuleiro segundo o parâmetro, que informa o estado
     * atual do tabuleiro.
     *
     * @param tabuleiro Estado atual do tabuleiro. É uma matriz que diz que
     * peças devem estar posicionadas onde no tabuleiro. Quando não há uma peça
     * naquela posição, 'null' deve ser usado na matriz..
     */
    public void atualizarTabuleiro(TipoPecaGrafica[][] tabuleiro) {
        for (int linha = 0; linha < NUM_LINHAS; linha++) {
            for (int coluna = 0; coluna < NUM_COLUNAS; coluna++) {
                // Muda o tipo da peça que está na casa, segundo a referência recebida.
                casas[linha][coluna].colocarPeca(tabuleiro[linha][coluna]);
            }
        }

    }

    /**
     * Posiciona as casas dentro do tabuleiro.
     */
    private void initCasas() {
        for (int linha = NUM_LINHAS - 1; linha >= 0; linha--) {
            for (int coluna = 0; coluna < NUM_COLUNAS; coluna++) {
                if ((linha + coluna) % 2 == 0) {
                    casas[linha][coluna] = CasaFactory.criarCasaBranca(linha, coluna);
                } else {
                    casas[linha][coluna] = CasaFactory.criarCasaPreta(linha, coluna);
                }
                this.add(casas[linha][coluna]);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(153, 0, 0));
        setPreferredSize(new java.awt.Dimension(400, 400));
        setLayout(new java.awt.GridLayout(8, 8));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
